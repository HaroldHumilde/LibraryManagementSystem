<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnReturn.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAABGdBTUEAALGPC/xhBQAAAWpJREFUeF7t
        2FFKw0AUheFs0vXozro0vQMZKJqWNM5DZ873wUWQtj6cHyrZAAAAAAAAAAAAAGB2H/sRqA3/vZ8IwtyP
        L4IwR+P3E8Hino3fTwSLOjN+PxEs5pXx+4lgEcYPZvxgxg9m/GDGD2b8YMYPZvxgxg9m/GDGD2b8YMYP
        Zvxgxg9m/GDGD2b8YMYPZvxgxg9m/GDGD2b8YMYPZvxgxg9m/GDGD2b8YMYPdmX8r/0+H/wccWc+a+Tf
        ++9N6cr47u/d6qZj/HE3XQDGH3tTBWD88SeA8PMVEH7+CQy/KQNoRDDmpg2guRLB0YOQd7v2kOjsg6Lf
        r3v0vqPP7L+b2pUI2ntYiAgQASKgiAARIAKKCBABIqCIABEgAooIEAEioIgAESACiggQASKgiAARIAKK
        CBABIqCIABEgAooIeCkC4y/qTATGX9yzCIwf4igC44e5j8D4odrwxgcAAAAAAAAAAABgZtv2A6W9Yyjh
        KNnsAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>