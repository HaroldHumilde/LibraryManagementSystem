<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAJwAAACcCAYAAACKuMJNAAAABGdBTUEAALGPC/xhBQAAHlBJREFUeF7t
        XQl4XWWZFhjEBURF9rXsMCCLiCA4slQQcENnHHSU0dFnBFGHZ0YdmcERH8ENAUUEUVQElaVtcm/uWf7z
        n/9s995szdKmIW3TbG2TpmnaJm1a6EZ753vPPX9zc3Nys3ShTf7vyfuc7eYs3/+eb/m38yYlSpQoUaJE
        iRIlSg52yeVyhxDePjQ09J61a9ee1NHRcdry5ctnta1ceVaItpVnLVu24syurq4z2tvbT6VjJ/b29uK3
        R9H/HRadRomSeCGSHLFp06ZjQaCmpqbLs9nsrbbj382F+0PLch63LPG8way5JrMShsmShsGSusHKdZO9
        ZBjms7aN31gPmKb5dc75J6qqqq5saWk5e+XKlSetX7/+HdFllMxkIZIdRVbptJaWtsvS6covCDf9Y2aJ
        uZpu1aQ01krLbpOJtdz2N9rC30rYQdhJ2BXhdcJ2W7hbhHCHCGuJeD2M2a2myeo1TdcIj2qa+fV0Ov1h
        EHD16tXHKgs4w6S/f/MJVPiXBUHwFcPgf2TMqmGW22lxdz1hO7e9XDFofwi5TUQbAcuyc5yLHBGuEDuJ
        hBscx1/BGF9IVrHcNK0fZDKZ2cuWLTtzYGDg6OiWlEw3Iaty6Lp1606uq6u7jgr/IV03fSJIZ2SZIiL5
        UwQRcCTRRiEiIyxhn2XxV8jykSu27q6vr78YsV90m0qmg8CikVW5znX9R8jCNBD6qfB30nbOcYhoFggX
        R6SJw+YTJl14TVpuNk2+nGJDh+7jO/Pnz7+Uko/joltWcjDKhg0b3lVT0/A+189+32A2uU1nDVmjXcIJ
        co6bzrtCcpMUp8WSaHIYdr9xwPWwxPVwXdwD3U9ON/hWihV7yN0GRMjv1tU1XaRc7UEmcJ+dnb2nM+Z8
        kcikVaTMHipkBPhhYcuClzEZCj+eRJNBPNEk5HXlutzG0vUyObK6W8nVd5HVm+c4zj+1traeHD2OkgNZ
        BgZyR1dV1V05tyz5c8fNNFNhbpLWpJBkcYW/LyGvX2xdgfAeyCV7bibniGCDrlmLKJF5kOLNi1SVygEs
        a9asOT5l8tuTKbPMDypXGaYduktYEBQyClsSTK5LMhQTZG+jkGCA3I91XN/3sjlD5zmLObl0UIUYb3ki
        kXzZdd3burq6TogeUcmBIs3Nzadqpvi6yZx6m6wELYlkGSrogAoVhetTwSJec0JgH44JB9YGLnUkQSYP
        kHds4DpY4h6AwuuHx5C4FAAWT3BvgDLaWk0zvr106dJZqv7uABDEazU1NecYBv8+JQctFve3GSZlg1SY
        eSLlC1kSS2J3QdPxPCH3FPFEk9ANO1ziJQCwLl8E3Acsm8Bx3B/IKGE7Wy3LXpJIVPy0oaH5AnreI6JH
        V7K/hZT/ZtfNXKLr1s+p0NsIr48kwXRB2LrRkUoZv66urr+8t7f3bZEKlOwvAdmEEO/ntvOULdwV8QU1
        fYBYz/UzK2j5TDZbe4Ui3X4UxDLc866wbPF0SjN6HDefCExnyCSHEqEezbD/gPrF7u7ut0YqUbIvpbKy
        8iLTtB5nFu/2gwwVghVrFaYTQDhk3BEBVxLxnq6tbbykrU3FdPtUiGxn6br5E+F6neRKKRhnVBjxhTSd
        ALKhakfW4XHhdRHpHq+vrz8fiVOkHiV7U1paWk4gy/YdZtltIBktQ8Clyvqt6YqQZBH5sE77dhHh2hwv
        c399fctpkYqU7C3p6Og4WjPNO8iFNhDBtqU0WLYg5weVowpnOgKV17rBw3U8Nyq1iXjbfL+yQdf5V9HP
        LlKVkj0VZKS2bV9LVo1TkvAqZabyLQ9dTKHrma6QLhXraJmQLSe0f8iyXFsI/0MqidhLgriNMfGExUUf
        SAalg3AShQUzE2HZ3mrO7V97XtXZkcqUTFVWrFjxLtd1/83izhIi3G4lK7KNwC7Lspsdx/9ia2ur6sw5
        VUF9WyaT+YBhMEZK3VSkZIUC2NzfyExh+qLyatKbqiqZiixevPxEcqUPEd2645QMyKA67thMAtpgDYOv
        MnX+SHNz+6mRCpVMVOgtPdzzMtfRW1srbIyMGu1CJdkU4byw4d/m3nbOnPmOE9ygmr4mKU1NTafouvmo
        xZw1oTKLCKeINhLobeKiRwz312ia9eSCBUvOiFSpZDxBNQjn7o3kShtBtrB/2Jhkw/6Rlm9GwgrjOFi6
        nRYTCxzLv6W/v//ISKVKSsnixYtP1DTjp7btrEFP2LBTYqRYSbZCwuX7vRUofwbCdTI5XeNhLEcutT9R
        lnqqo6VDtUBMRGzbu4oIFThuejsqN4fJpTA2hl88k4mdpLdaIt4/IBaO1KokTlDvxri4h0jWVZwkKJTC
        cGiBF5QI12Nazv2YZCdSrZI4yWbrzjMt8TIpLax3g/IU8caH7K4ekQ06ezWlW0ZjY+MlkWqVFAuShZRh
        fZyU1rw/RlJNJ2DcBlyqJBz26QZvFcK7Qw01HEPa2/uO0wz+ENoGQThYNjRSK/KNj0LCYTu/9NcbzHqy
        ra3nlEjFSgqlpmbBOaSkJNwBekfgTQ1HpdN6sYIVRkIOOxzeDnvSbDcokKuvX3RxpGIlhcK5e40QQT0U
        Ji0cSCffWoWxAbLlx7vmXSqWYezLRYvj+LdQuKK6LhVKf3/uSJM7XyJFYZ623W50t+KKFKwwEhjrirGv
        0JfnZ8NlXodOj66b38PUsZGqlUAwR5plOQ+S+1wLgkmiwZ3CrcYpWWEYMkvNrw9XjFtcDJJbfVrFcUXS
        3N5+qmmKv9BbuVkSDq5BxnKFylUYjRKEe40Sh/KWlnbVObNQKLA9nzJUQYrC3LkjCCeVpzA2ShDudZPx
        zPz5Cy6NVK0Ekk5XXWmYdh2UVEg4xCEynlMYG8WEG94v6KXlC4NANXPtFlLEoZYT3EDEagbZpNIk8QoV
        qBCPOMLl9QfC2Usty/p4X1/f2yOVz2xByk4Jw8dJSZiQZrcSFSaDfOO9fGGB/DqmJ+OdqZRxp5rKNRI0
        vaBKhJS0XL6dhYlCoRIVxsLYhGPcXl5RoX8Ncx5HKp/ZsnHjxncbhv1NUlKPbFVAk5Z0p4pwE0EJwln2
        ilRKv0sRLpKhoaFjDMb/i5S2CpZNKg1LQMVw4yPfrDWsq2HdiZBwyaR2tyJcJKGFI8KRslZJshUqTW4r
        jI2ShCOXmkhUKJcqBYpgzPkGKaunWJEKE0NpCye6EonEVwcHB98ZqXxmC5IGItyXSVmY4XG30hQmjnFc
        ansymfoX1S8uElSLcO7fblluuyLc1DAO4Zbouv4xVQ8XCRHu74TwZpPCWgoJp8g3cYxDuCbG2PWk5zdH
        KlfiuulrSEGNhQRThJs4xkka5ruu+wG06ETqVhIEVZcJJ0gXKlERbuIoQbjtmAkok8mowTSFUle36Ezd
        tBImEzugMDTYF7Y2KJQGPi6S/wDKcG9fLP0gszmlGS83NDSo7kmF0tLSdYJu8l+RkgalsobfUmXlxgN6
        /KIBH4TDywq95ZfuurJE8on2djWj0ghBwzLq4jj3uqEsKBFLqcBiBSuMhPyMkySa9A4m4yvnliX/U311
        ukgooD0EE9hYltsklQjLpgg3McgYDuvQl5wDWDPYKynTvBVVT5GqlUhJ19RcaDDBSWHbpOKgNOVSx4fs
        DwddyW75ZO22p1KGQwmZGiYYJ5g1yTDEL4lo66BEKE66V4XSAOFg5SThsI8xMVih6b/Fpz0jFSspFNSE
        M2Z/lnG3FW8oFAcFKtKND0m4/Hq+Okk37c6Uzu7q7u5+d6RiJcVCicPltuMKjBoH4ZSVmxjyGWr+s0iR
        vrabJq+0LOeDaMmJ1KukWPKfNzIfsCy7j3OKRQRZODsc0BuhWNlQriIkZgrFZIS6ZoUTODqOt3bu3LLf
        NTU1zYpUqyRO6G08XAhxPWOskXO+y8V3tCx8TVkRrhTw9eiQaEQ607Bzvh80VVTon1PjGCYgtbW1szRN
        e4aIN0BvqiLcBMBM8gakBxCP1jfquvFXzLUXqVRJKVm7du1R5FY/R4RrYYwrlzoBwKqlg6rQpRLplpSV
        lX2rp6fnmEilSsaTmpqac4h0f9F1cwhxnCJcaeClDIJMjrL8IV1n81xXNdZPStra2t5BhPuCaVpLlUsd
        Hwg9SFc5inlbksnUXaopawoCK0dk+zNhUBGuNOAFNM0YIAv3h6qqqvMjFSqZjCxduvQoylRvF8JpJLLt
        VIQbG47jbyPSVc+ZU3aHykz3QBYvXnx6WVn5I36QWWUigRB+OOEe2llRm45uOegHFlcI0wl4VixlZwY5
        6SD0gcpx1/U6X3xx7k8WLFigPnm0J0Kx3BGVlZVX66ZlC8fbLAtAKtwwBa1Xjiic6Qj0/sASnyHHs2s6
        xWteJiQcHduQSCTnoBt5V1fuLZHqlExV+vr6jqvQtHtdL1hCCt4FpUPR+bcdb/70d6l4VpAsnakOt6GD
        PAn9bfTi1ZeVJe5U1SB7UWprm2ZZtvOwYdrhYGm4lfzbnQmtXGHhTEfQc+eCdFVo1QEQDwT0g8rFc+aU
        3z9//nzVI2RvSi6XO4yyr4srNPNP9Lb34e0G6WDd8r1d4wtqugAWDs8MywbCYdsPqjrLyrSHbTu4APqJ
        VKVkbwm6L6XT1dckU2YZKX1QutSZQrgwOYi+W0HE6zUM+2nGnCvVAOd9KF1dXe8UwvuobtouFcJG9AGb
        CVkq3GcmWyOt+hrOvTnz5iVmqyqQ/SCUuR5r2+5nqBDS5GaGEMvFFdJ0gnSnZOH6NMN6ubzCuEUlCftR
        Ojs7j3cc53b02fe8YAA9JfAZbnTRyX+KmwJtneId2hf4leF2KeQz3amDCUpkpggQKkwG6F5xL7h/+TwA
        1tE30PfT5EbZi/PmJW/DSxepQsn+Eijd87yPlpO4TqZPFpLsqoOvSaN/GIgXflW6BNBjdk9AHn6PUEg0
        3C+eAduyf5tl8W5dZ39OJBKzW1tVO+kbJvigL5HuWi1lPkvE6UEBofBAPBAptF5F5IqDrG6YKuJINBnI
        +wXhAHTL0jQDDfI7XddvJwv3xEsvzbsGMWz06EreKOnt7X2b51VeapnOw2QZWm3ubwPRQstABem5mZB4
        pVAcM00Wca5yMpCEwxJA7w8i2lZyoa/MnVv2oKZZF6mxpQeQoB6qvr75LMOw79U1q4Ys3XpJNLinYoIV
        I45Ek0EciSYD9PaAVUNXLIpJ0b9tfSqlp3Xd/FomkzmTnk8NhDkQBWNbA6fyJl3nz5CFayersbXQVY0F
        ZLp7AsuZOvD/csAQWbUtjNmt8+aV/T6ZTN5WX79YfbP+QJf+lv4jq6sbLgjnDaYSFSLojbNqhYizWvsT
        ZN0Qq3UzZtnl5RX3CiEu7O/vPzJ6JCUHgzQ2th2LiQ513fqx4F49EWtdMdEk4kiwn7CL0EcxW83LL899
        cM6cxIcwVDJ6BCUHm1DscwgV4Gm2bd9GGd9vyII0IT4Kx0mQGwPCkWFFWackRKHblPsKgf35Zie0caIT
        AVoC0Fcvvy4Q/FNMhm0sHQx7pHVbuDtoezWzeO3csvJHysvLb6mvrz9NtYlOE+nu7n7rokWLznTd4FYK
        xB8lotWRC1tFZNuKQB1tlKjNB3lApGLioUkJKCRlIUAkkEuCCEX7Rc4wrZymmyHZdINhezMd66hI6c4L
        L7z0o1TKuKm6esEZRDQ1/+50FCrYwzG5ixD+9ZQF3kcFXkaWbxGRoZes1KbI+sSSR1ovbEvIffgdlhSC
        hZD7iIg7CRvp/1fS+RcS0V5MJFL30PWvRoKjLNoMEbhaTPKyYMHic4Kg8gZNM/+dSPdLw+Qe43YLEWQV
        kWaQSLWFsLOQfMVkA0BIwk78Xjj+elouN8l9Jyp0a1554vGKCv1LFEt+BANc1OQySkKXC4uDPneM2bfN
        o0yxvDz5WIWmP29atoWZwA3Gm4mUreQi21Oa3pnSjA5NN5bRdgu5yjraZ5cnK56fV578RXlSu5tz5yac
        b+HChSejcjq6lBIlI4Ws36EY/Y8OAhjEg8+jY1xFUFl5QzpddbMbBLdS9nsb4kFa3uym0zfW1DRc1dDQ
        fEFLR8dp7e19x+H/cZ7olEoOVqFCfDM+4YOuOe3t7cdRZndiU1PTKZWVjacj+MaoJaCxsfF0dLsmC3My
        LU+g372HfndAdlSE9cP9NWYbT2qk56irqzuzoarh7NraheeiPjGbnf/3lZV1F2FZU1NzIf32fHrGc5AE
        IQOHZV69evWx0AvpR31mfKoCcoFYIJTrZs9zHOdKzvlNpmneYRjWN2n5A9NkjxgGe4qyzmcZ489p5AKT
        SQ1TRDzHuf0cZaBP0/rPafltXWefoXNcTknD8XTuN7SpCNaPnus42w4upsTlHym++56h86d0nT+vadYc
        PcXKDd1OmYbN6JhtWYJAfxbXGbPK6Vn+RvgTPfuThmE+TInPd0g3mI9ltud5V2AQeVdX1wmwtNEllcRJ
        d3furc3kyhBcM8ZmUwHcw7j4BXq4UnCe5cJbSMtl3PZXWLazmtveWsIgbW+0bW+I1jdJRNt0zFvnepke
        4QSL6VxaSrfu0y3xsaqq+otRKLhmdPl9KniBYJVxXcbc2zSD/w/FhzrdewvdYw8920B0768RttB+zHW8
        nbDDFr7ENgIlMv6rhE2EDQRKUnzShdtpcWcRs0RgWu5fiKAP4BtmeFFrm5pmoWdNdCtKyD28q4rciG27
        NxMhHmBMlBNBGoUbrERBWNzdUlz3NRlQoVGWGQCbqSBXGaa9yDB40rScHzHb/XympuZaCu7PbWtbfeze
        HNsJdwmX57qZ91HM92kh/B/S/ejMcpoJq2h9c+F9jgXcfykQ4cIlfkvn3Ul4ldb76Vlb6VgG4x9MS3wl
        na6+fOnSpSchSYpuceYIxR9vRnzl+/77bcenrM59Tjd4o25Yq0lhW6UCMWhEKn6qwDnonGHBoIIXoPXX
        GHPWEvk66HgtWdO/geyaaf2rTUlBpqb+WnK/721uazuru3vdyf39/SesXr3p2J6hoWPwUeGenqFjAMRP
        y5cvP3Hx4s7Ta2sbL/H9yqvxCQCyYp80TfEVg4mfEbkZXWMp3cMaeq7Xiggy6n6Lgd+WgjwfUPw/dOx1
        et5Berk66Pkcupefkov+SCZTdyYmDYqKY/oKuZYjENBrmnYzuU0qDCNDRFtBytmEUeUAFFVIEqm8qUKe
        A+cDsB5ZvBB0rV1USHBTa2l7BS2X0vZCuq9sSjctjBTTDOsFg9l/IJI+SQX2Gyxp+3dUgM8azPkrnSNB
        5w7o3I1c+K/QOZbROVYSodfTOeEGRz1L3L6pYKzzyP1Sl3Qf20m/feQ16nWT/56s+2cymdpz6eWffh0F
        ECjDohHRZlNc8ShZtloKdPsp0H1dvpWSEJIUUBYIUazIyaK4QOS1UBBA4XF5L9H/7SLsiOKp3bET3VMI
        Wt+MfThG59tO5NqFQcs4N+0Pm8zwAskCl+fd28C1gLH24z6wlM8c3ct6xHwU+/2RspFPVVdXn0Ex7fSY
        KgJdo4lcVySTyQds264C0eghc0S2fAN6QTtmoaKwjkKS21NFAYF2W7XC9TjI/5X/J+8tDnG/xTVRuBht
        VXjOwv+TkP8/FuL+ZzIAwaBjkB/3UXRskDL8hZTxPmaa9nXI4qNiO/gEmRnqlSiF/6rvB4br+ssphd+B
        BvNwKlWQzcmPu0ThQAFSwSgwiUIFTQVSyfINl8A2MPz5R/wG1g/Xxb2AKIj3QJb8b4qR/80wmQrvu/D+
        5bVhAbHEfvwfrI+8z30F+ZzyuXFdkA/XDu/D9nc6IlhFSU1gaPa9QqQvPOhaR5CG27Z3bSql/8rzgmZd
        N18jhD1bwy5BRDpJPDw4lICHLySCRJwSJwupcHm+kQTBEr/LE0iSSxJQHpe/KQbOIe81f774lwTXLCSn
        vKfi3xVDnnOqKLwvQBIP6+G94CUzaZs5W2zuLWPMoliVzUZdYVScB7Zks40nJRKpO23bNcmK9YJUpRCn
        5P2LkQSaPOLOefCguMu9Y/v9tExT2dxNYc+5mDYtKtoDS8iFHu667nnkNu8LgkwdLTcXkysOcUrYv4gj
        0WQQd86DB8U9oCNsobJZIoTzS1RdYUbSqJgPDEFlose9Sw3Deszmfqtp2K/LUfDjIU4JCgcIuNdt2eJF
        xsTslpYDpGsV2uxs076Wc/ePZIpX4HsBmGIBQ/UwPjSOZIWIfVCFAwaO6/fbjm9ppvnpN3yaifyHPPiN
        npcpo8BzDUiGOACk872sItw0ASUYg2Tp0jpjn29u7nxjqk6QOqOvGDOdeYbB12GqBWQ8cp6MRLk2wclk
        FA505GfczGy0LLs6kUp9GR0RIhrsH6EE4S0IJpPJiueJaH2uk6HUmhIAi94Ghg+NpXPZTC1ZOk6k8ksi
        7gH3L5C47AniznkwoXTyg7pDzE+HQUEWF5ss7mQZsz+5ZH9NGUZkOyydrnkvke0Zx/FXwZoZuk1WLSDr
        lgkJB4BMIF4xwYoR95D7F3EkmgziznnwQNY9ok4uDqg7BOkwlgMj1Gg5WFGhm+ikMDg4uO8n2Alqas7R
        NPPRdLpqeUpjsQ+hMO2B7k/zbNu7igzQvuvuhP5djIvv+kHlMk3H9O355hGFGYlVnHtPYdwHke6QiCJ7
        T9BvnjH3s7rOF5KZ3Ykp613KRGPYrzBj4HdoGv9hW1vbKRFN9o6gFQEDeJnlGHShTfDp+RnED/6adoU9
        wuvMEAsc7t++YsWGvdeNHaOEUin2JAWRq2UgaWIiPSJcjKlVmEGgZHGDYYi5VVV1lyGhjCgzdUEmouvs
        Ltvx8fmh3T07YOHyvSkUZjQY5rbLrLQs8eM9dq0IBmtqat5nMsska4bBGWF3ooqUmQvS1ZGVizW1CjME
        IBxZuddty21wnOwtezS33Zo1m4/XNONBi4tu2Y9KWjiQDVZuBNsVZhxQ14pKf9MQA64Inlm4cMm5EX0m
        L9ls9irbdtLcdtCvv4jdpWuoFWYGUHnvuVmydE6OrNxSjFabUgKBke+WZd/PudMdX6OuCKeADpxBiGg+
        5SHGxItNTUvPi2g0camurr5c102byLZVEU5hLIBs+Tgu32OYiLcEA78n9eG5fCUvv4dz0ZknmyKcQjzg
        UkE4+WEW2l5fUWE+3dnZeXpEp/GlqalplmGYLwjhDinCKZQCyIZeQuiWhjiOrNwOXee1+NzohOrlUBXi
        uu6NFL8tyI85UIRTGBvIUOFWYeEiwsHKraJw7D5MhRHRamzBED/G2PeF8HoxdlQRTqEkyLrBrcoOtVEs
        9yp5yDJMEhTRamzB4GXDMOa4rv9qacIpKAwnDeF3wsjKgXBhFYntLIKnRDt8RK14MTj/sHD8BpwMFXvF
        F1BQKAQ4giZPrMtB19im9dUVmvHfJT8mHA2K+RpZNMxoNOrkI6Esn0JJwm1M6ezPJbPVpvb24zSDPcYs
        MYB/Km3hFOEURhJO8iXiznbdtN358xdcGtFrtGCiOt1kCZPxLbLNtPDkI6EIpzAy7JLr4A6WJhMt+HL3
        mHEcptVill1lUbKgLJzCRBDHEXAn4k8PY/w/BgYGjo4oNizEwkM1jc22hdsEIpUmG6AIpzAuBnXdfALT
        0kY0GxYMbE6ljH8WjrcMREJXJOmb46EIpxCPYWPlv2qaVqKlpeXsiGbD0tHRcXQqpX9LuN5KEEnO3lh8
        smEowinEA4SLSIcJKLN1dXWXRTQbltra2mO4cP+PYrg1iOGKTzIainAK48O2nSbLcm6IaDYs6fr6E4lA
        vybCDSrCKewtEOGWUTL6CcoRRn4BKAhqZzFu/43ItkUSqXTioAinMAFwsdww2J1EuJGzpAdB9QVEOI0I
        twPzSODHinAKewqK4XqIcN8YNVG151VeajIuiEThR2nDHyvCKewpuOjVNOPbo0ZzeV72CpPZGDCzS1k4
        hb0GLvp03fzeqK8bEuGuQisDSCQJVxqKcArjg5KGNWTh/ncU4YKg6oMUv9VOnEiKcArjw3HcfrJwP8A4
        mYhqeQmCyn/gtqjLV4nAyqm2VIWJAK1Rccgfx3cfKiqMh0a1p/p+9noyfw2KcAqTQxzZgPxxYftrUynj
        Z6MI52Uys8nCLVCEU5gc4sgG5I8T4dZpFeajI6ZnzeVyhxDhPkoEWqQIpzA5xJENyB8Xwh9IVZi/2rCh
        YPoHdE3KZDIfIwK1KMIpTA5xZAPyx8nCDaaS5hP4knZEt5Bwh6XTlZ8kAi1RhFOYHOLIBuSPh4RLsSdH
        Ec7PZG4nArUqwilMDnFkA/LHiXAbKIb77dDQ0PDorQLCLVOEU5gc4sgG5I+PRbhD0+n0pxThFCaPOLIB
        +eMgXCppPDWKcEGQ/QQRSLlUhUkijmxA/nhk4X5THMMdopIGhakhjmxA/ngs4SAR4ZoV4RQmhziyAfnj
        RLiNqBbJ18O96U3/D0w8cU07c6lFAAAAAElFTkSuQmCC
</value>
  </data>
</root>